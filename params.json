{"name":"Titan","body":"Titan ![Build status](http://travis-ci.org/flippingbits/titan.png)\r\n======\r\n\r\nTitan helps you creating daemon threads, that can be accessed later on. On the one side it creates daemons that run in the background and don't stop if the current process exits. On the other\r\nside it manages created daemon threads and provides functionality for accessing them later on by a custom id.\r\n\r\nUsage\r\n======\r\n\r\nFirst, you've to install the gem\r\n\r\n    gem install titan\r\n\r\nand require it\r\n\r\n    require \"titan\"\r\n\r\nCreating a new daemon thread using Titan is pretty easy. First, you've create a new Titan::Thread object and then call its #run method:\r\n\r\n    thread = Titan::Thread.new do\r\n      # here comes the programm\r\n      sleep(15)\r\n      puts \"I'm awake!\"\r\n    end\r\n    thread.run\r\n\r\nFurthermore you can pass an id to each created thread that can be used for identification in the future:\r\n\r\n    Titan::Thread.new(:id => \"my_new_thread\") do\r\n      sleep(15)\r\n      puts \"I'm awake!\"\r\n    end.run\r\n\r\nIt's also possible to change the identifier after creation and while the thread is running:\r\n\r\n    thread = Titan::Thread.new do\r\n      1+1\r\n    end.run\r\n    thread.id = \"my_new_thread\"\r\n\r\nThe identifier must be unique.\r\n\r\nTitan manages created threads and saves them in pid files inside of a .titan\\_threads directory that can be found in your home folder.\r\n\r\nYou can easily list all available threads:\r\n\r\n    Titan::Thread.all\r\n\r\nBy using the Thread class you can find currently managed threads by using their identifier:\r\n\r\n    thread  = Titan::Thread.find(\"my_new_thread\")\r\n\r\nA thread can be forced to exit:\r\n\r\n    thread.kill if thread.alive?\r\n\r\nIf you want to remove threads from Titan, that aren't running any longer, you can do this by:\r\n\r\n    Titan::Thread.remove_dead_threads\r\n\r\nFurthermore, you can check if a single thread is alive:\r\n\r\n    thread = Titan::Thread.find(\"my_new_thread\")\r\n    thread.alive? # returns true or false\r\n\r\nThe thread's memory and CPU usage is available by\r\n\r\n    thread.used_memory\r\n\r\nand\r\n\r\n    thread.used_cpu\r\n\r\nYou can print the status of all threads managed by Titan on the command line:\r\n\r\n    titan status\r\n\r\nRequirements\r\n======\r\n\r\n* Ruby 1.8.7 or higher\r\n* Linux or Mac OS X\r\n\r\nBugs\r\n======\r\n\r\nPlease report bugs at http://github.com/flippingbits/titan/issues.\r\n\r\nNote on Patches/Pull Requests\r\n======\r\n\r\n* Fork the project from http://github.com/flippingbits/titan.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a\r\n  future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.\r\n  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n\r\nCopyright\r\n======\r\n\r\nCopyright (c) 2010-2012 Stefan Sprenger. See LICENSE for details.","tagline":"Titan helps you creating and managing daemon threads.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}